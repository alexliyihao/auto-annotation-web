{"version":3,"file":"annotorious-selector-pack.min.js","mappings":"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","sources":["webpack://Annotorious.SelectorPack/webpack/universalModuleDefinition","webpack://Annotorious.SelectorPack/./node_modules/fast-deep-equal/index.js","webpack://Annotorious.SelectorPack/./node_modules/tiny-emitter/index.js","webpack://Annotorious.SelectorPack/webpack/bootstrap","webpack://Annotorious.SelectorPack/webpack/runtime/compat get default export","webpack://Annotorious.SelectorPack/webpack/runtime/define property getters","webpack://Annotorious.SelectorPack/webpack/runtime/hasOwnProperty shorthand","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/rng.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/util/SVG.js","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/regex.js","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/validate.js","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/stringify.js","webpack://Annotorious.SelectorPack/./node_modules/uuid/dist/esm-browser/v4.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/recogito-client-core/src/WebAnnotation.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/recogito-client-core/src/Selection.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/tools/Tool.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/util/Touch.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/selectors/EmbeddedSVG.js","webpack://Annotorious.SelectorPack/./src/circle/Circle.js","webpack://Annotorious.SelectorPack/./src/circle/CircleMask.js","webpack://Annotorious.SelectorPack/./src/circle/RubberbandCircle.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/tools/EditableShape.js","webpack://Annotorious.SelectorPack/./node_modules/@recogito/annotorious/src/util/Formatting.js","webpack://Annotorious.SelectorPack/./src/circle/EditableCircle.js","webpack://Annotorious.SelectorPack/./src/circle/RubberbandCircleTool.js","webpack://Annotorious.SelectorPack/./src/ellipse/Ellipse.js","webpack://Annotorious.SelectorPack/./src/ellipse/EllipseMask.js","webpack://Annotorious.SelectorPack/./src/ellipse/RubberbandEllipse.js","webpack://Annotorious.SelectorPack/./src/ellipse/EditableEllipse.js","webpack://Annotorious.SelectorPack/./src/ellipse/RubberbandEllipseTool.js","webpack://Annotorious.SelectorPack/./src/freehand/RubberbandFreehand.js","webpack://Annotorious.SelectorPack/./src/freehand/EditableFreehand.js","webpack://Annotorious.SelectorPack/./src/freehand/RubberbandFreehandTool.js","webpack://Annotorious.SelectorPack/./src/index.js"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Annotorious\"] = factory();\n\telse\n\t\troot[\"Annotorious\"] = root[\"Annotorious\"] || {}, root[\"Annotorious\"][\"SelectorPack\"] = factory();\n})(self, function() {\nreturn ","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","function E () {\n  // Keep this empty so it's easier to inherit from\n  // (via https://github.com/lipsmack from https://github.com/scottcorgan/tiny-emitter/issues/3)\n}\n\nE.prototype = {\n  on: function (name, callback, ctx) {\n    var e = this.e || (this.e = {});\n\n    (e[name] || (e[name] = [])).push({\n      fn: callback,\n      ctx: ctx\n    });\n\n    return this;\n  },\n\n  once: function (name, callback, ctx) {\n    var self = this;\n    function listener () {\n      self.off(name, listener);\n      callback.apply(ctx, arguments);\n    };\n\n    listener._ = callback\n    return this.on(name, listener, ctx);\n  },\n\n  emit: function (name) {\n    var data = [].slice.call(arguments, 1);\n    var evtArr = ((this.e || (this.e = {}))[name] || []).slice();\n    var i = 0;\n    var len = evtArr.length;\n\n    for (i; i < len; i++) {\n      evtArr[i].fn.apply(evtArr[i].ctx, data);\n    }\n\n    return this;\n  },\n\n  off: function (name, callback) {\n    var e = this.e || (this.e = {});\n    var evts = e[name];\n    var liveEvents = [];\n\n    if (evts && callback) {\n      for (var i = 0, len = evts.length; i < len; i++) {\n        if (evts[i].fn !== callback && evts[i].fn._ !== callback)\n          liveEvents.push(evts[i]);\n      }\n    }\n\n    // Remove event from queue to prevent memory leak\n    // Suggested by https://github.com/lazd\n    // Ref: https://github.com/scottcorgan/tiny-emitter/commit/c6ebfaa9bc973b33d110a84a307742b7cf94c953#commitcomment-5024910\n\n    (liveEvents.length)\n      ? e[name] = liveEvents\n      : delete e[name];\n\n    return this;\n  }\n};\n\nmodule.exports = E;\nmodule.exports.TinyEmitter = E;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export const SVG_NAMESPACE = 'http://www.w3.org/2000/svg';\n\nconst getClassNames = el => {\n  const attr = el.getAttribute('class');\n  return attr ? new Set(attr.split(' ')) : new Set();\n}\n\n// IE11 doesn't support adding/removing classes to SVG elements except \n// via .setAttribute\nexport const addClass = (el, className) => {\n  const classNames = getClassNames(el);\n  classNames.add(className);\n  el.setAttribute('class', Array.from(classNames).join(' '));\n}\n\nexport const removeClass = (el, className) => {\n  const classNames = getClassNames(el);\n  classNames.delete(className);\n\n  if (classNames.size === 0)\n    el.removeAttribute('class');\n  else\n    el.setAttribute('class', Array.from(classNames).join(' '));\n}\n\nexport const hasClass = (el, className) =>\n  getClassNames(el).has(className);","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import { v4 as uuid } from 'uuid';\nimport equals from 'fast-deep-equal';\n\nexport default class WebAnnotation {\n\n  constructor(annotation, opts) {\n    this.underlying = annotation;\n    this.opts = opts;\n  }\n\n  /** For convenience - creates an empty web annotation **/\n  static create = args => {\n    const stub = {\n      '@context': 'http://www.w3.org/ns/anno.jsonld',\n      'type': 'Annotation',\n      'id': `#${uuid()}`,\n      'body': []\n    };\n\n    return new WebAnnotation({ ...stub, ...args });\n  }\n\n  /** Creates a copy of this annotation **/\n  clone = (opt_props, opt_opts) => {\n    return new WebAnnotation({ ...this.underlying, ...opt_props}, { ...this.opts, ...opt_opts });\n  }\n\n  /** An equality check based on the underlying object **/\n  isEqual(other) {\n    if (other?.type !== 'Annotation') {\n      return false;\n    } else if (this.underlying === other.underlying) {\n      return true;\n    } else if (!this.underlying.id || !other.underlying.id) {\n      return false;\n    } else {\n      return equals(this.underlying, other.underlying);\n    }\n  }\n\n  get readOnly() {\n    return this.opts?.readOnly;\n  }\n\n  /*************************************/ \n  /* Getters to forward properties of  */\n  /* the underlying annotation         */\n  /*************************************/\n\n  get id() {\n    return this.underlying.id; \n  }\n\n  get type() {\n    return this.underlying.type;\n  }\n\n  get motivation() {\n    return this.underlying.motivation;\n  }\n\n  get body() {\n    return this.underlying.body;\n  }\n\n  get target() {\n    return this.underlying.target;\n  }\n\n  /** Same as .body, but guaranteed to return an array **/\n  get bodies() {\n    return (Array.isArray(this.underlying.body)) ?\n      this.underlying.body : [ this.underlying.body ];\n  }\n\n  /** Only bodies are meant to be mutated by the application **/\n  set bodies(bodies) {\n    this.underlying.body = bodies;\n  }\n\n  /** Same as .target, but guaranteed to return an array **/\n  get targets() {\n    return (Array.isArray(this.underlying.target)) ?\n      this.underlying.target : [ this.underlying.target ];\n  }\n  \n  /*****************************************/ \n  /* Various access helpers and shorthands */\n  /*****************************************/\n\n  /** Selector of the given type **/\n  selector = type => {\n    const { target } = this.underlying;\n\n    if (target.selector) {\n      // Normalize to array\n      const selectors = Array.isArray(target.selector) ?\n        target.selector : [ target.selector ];\n\n      return selectors.find(s => s.type === type);\n    }\n  }\n\n  /** Shorthand for the 'exact' field of the TextQuoteSelector **/\n  get quote() {\n    return this.selector('TextQuoteSelector').exact;\n  }\n\n  /** Shorthand for the 'start' field of the TextPositionSelector **/\n  get start() {\n    return this.selector('TextPositionSelector').start;\n  }\n\n  /** Shorthand for the 'end' field of the TextPositionSelector **/\n  get end() {\n    return this.selector('TextPositionSelector').end;\n  }\n  \n}\n","import WebAnnotation from './WebAnnotation';\nimport { v4 as uuid } from 'uuid';\nimport equals from 'fast-deep-equal';\n\n/**\n * An \"annotation in draft mode\". Really the same\n * data structure, but as a separate class so we can\n * tell things apart properly.\n */\nexport default class Selection {\n\n  constructor(target, body) {\n    this.underlying = {\n      type: 'Selection',\n      body: body || [],\n      target\n    }\n  }\n\n  /** Creates a copy of this selection **/\n  clone = opt_props => {\n    // Deep-clone\n    const cloned = new Selection();\n    cloned.underlying = JSON.parse(JSON.stringify(this.underlying));  \n\n    if (opt_props)\n      cloned.underlying = { ...cloned.underlying, ...opt_props };\n\n    return cloned;\n  }\n\n  get type() {\n    return this.underlying.type;\n  }\n\n  get body() {\n    return this.underlying.body;\n  }\n\n  get target() {\n    return this.underlying.target;\n  }\n\n  get targets() {\n    return (Array.isArray(this.underlying.target)) ?\n      this.underlying.target : [ this.underlying.target ];\n  }\n\n  /** For consistency with WebAnnotation **/\n  isEqual(other) {\n    if (!other) {\n      return false;\n    } else {\n      return equals(this.underlying, other.underlying);\n    }\n  }\n  \n  get bodies() {\n    return (Array.isArray(this.underlying.body)) ?\n      this.underlying.body : [ this.underlying.body ];\n  }\n\n  selector = type => {\n    const { target } = this.underlying;\n\n    if (target.selector) {\n      // Normalize to array\n      const selectors = Array.isArray(target.selector) ?\n        target.selector : [ target.selector ];\n\n      return selectors.find(s => s.type === type);\n    }\n  }\n\n  /** Shorthand for the 'exact' field of the TextQuoteSelector **/\n  get quote() {\n    return this.selector('TextQuoteSelector').exact;\n  }\n\n  /*******************************************/ \n  /* Selection-specific properties & methods */\n  /*******************************************/\n\n  get isSelection() {\n    return true;\n  }\n\n  toAnnotation = () => {\n    const a = Object.assign({}, this.underlying, {\n      '@context': 'http://www.w3.org/ns/anno.jsonld',\n      'type': 'Annotation',\n      'id': `#${uuid()}`\n    });\n\n    return new WebAnnotation(a);\n  }\n\n}","import EventEmitter from 'tiny-emitter';\nimport { isTouchDevice } from '../util/Touch';\nimport { SVG_NAMESPACE } from '../util/SVG';\n\nconst IMPLEMENTATION_MISSING = \"An implementation is missing\";\n\nconst isTouch = isTouchDevice();\n\n/**\n * A commmon base class for Tools and EditableShapes\n */\nexport class ToolLike extends EventEmitter {\n\n  constructor(g, config, env) {\n    super();\n\n    this.svg = g.closest('svg');\n\n    this.g = g;\n    this.config = config;\n    this.env = env;\n  }\n\n  getSVGPoint = evt => {\n    const pt = this.svg.createSVGPoint();\n\n    if (isTouch) {\n      const bbox = this.svg.getBoundingClientRect();\n\n      const x = evt.clientX - bbox.x;\n      const y = evt.clientY - bbox.y;\n\n      const { left, top } = this.svg.getBoundingClientRect();\n      pt.x = x + left;\n      pt.y = y + top;\n\n      return pt.matrixTransform(this.g.getScreenCTM().inverse());\n    } else {\n      pt.x = evt.offsetX;\n      pt.y = evt.offsetY;\n\n      return pt.matrixTransform(this.g.getCTM().inverse());\n    }\n  }\n\n  drawHandle = (x, y) => {\n    const containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    containerGroup.setAttribute('class', 'a9s-handle');\n\n    const group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    const drawCircle = r => {\n      const c = document.createElementNS(SVG_NAMESPACE, 'circle');\n      c.setAttribute('cx', x);\n      c.setAttribute('cy', y);\n      c.setAttribute('r', r);\n      return c;\n    }\n\n    const radius = this.config.handleRadius || 6;\n\n    const inner = drawCircle(radius);\n    inner.setAttribute('class', 'a9s-handle-inner')\n\n    const outer = drawCircle(radius + 1);\n    outer.setAttribute('class', 'a9s-handle-outer')\n\n    group.appendChild(outer);\n    group.appendChild(inner);\n\n    containerGroup.appendChild(group);\n    return containerGroup;\n  }\n\n  setHandleXY = (handle, x, y) => {\n    const inner = handle.querySelector('.a9s-handle-inner');\n    inner.setAttribute('cx', x);\n    inner.setAttribute('cy', y);\n\n    const outer = handle.querySelector('.a9s-handle-outer');\n    outer.setAttribute('cx', x);\n    outer.setAttribute('cy', y);\n  }\n\n  getHandleXY = handle => {\n    const outer = handle.querySelector('.a9s-handle-outer');\n    return {\n      x: parseFloat(outer.getAttribute('cx')),\n      y: parseFloat(outer.getAttribute('cy'))\n    }\n  }\n\n  scaleHandles = scale => {\n    this.handles?.forEach(handle => {\n      const inner = handle.querySelector('.a9s-handle-inner');\n      const outer = handle.querySelector('.a9s-handle-outer');\n\n      const radius = scale * (this.config.handleRadius || 6);\n\n      inner.setAttribute('r', radius);\n      outer.setAttribute('r', radius);\n    });\n  }\n\n}\n\n/**\n * Base class that adds some convenience stuff for tool plugins.\n */\nexport default class Tool extends ToolLike {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    // We'll keep a flag set to false until\n    // the user has started moving, so we can\n    // fire the startSelection event\n    this.started = false;\n  }\n\n  attachListeners = ({ mouseMove, mouseUp, dblClick }) => {\n    // Handle SVG conversion on behalf of tool implementations\n    if (mouseMove) {\n      this.mouseMove = evt => {\n        const { x , y } = this.getSVGPoint(evt);\n\n        if (!this.started) {\n          this.emit('startSelection', { x, y });\n          this.started = true;\n        }\n\n        mouseMove(x, y, evt);\n      }\n\n      // Mouse move goes on SVG element\n      this.svg.addEventListener('mousemove', this.mouseMove);\n    }\n\n    if (mouseUp) {\n      this.mouseUp = evt => {\n        if (evt.button !== 0) return;  // left click\n        const { x , y } = this.getSVGPoint(evt);\n        mouseUp(x, y, evt);\n      }\n\n      // Mouse up goes on doc, so we capture events outside, too\n      document.addEventListener('mouseup', this.mouseUp);\n    }\n\n    if (dblClick) {\n      this.dblClick = evt => {\n        const { x , y } = this.getSVGPoint(evt);\n        dblClick(x, y, evt);\n      }\n\n      document.addEventListener('dblclick', this.dblClick);\n    }\n\n  }\n\n  detachListeners = () => {\n    if (this.mouseMove)\n      this.svg.removeEventListener('mousemove', this.mouseMove);\n\n    if (this.mouseUp)\n      document.removeEventListener('mouseup', this.mouseUp);\n\n    if (this.dblClick)\n      document.removeEventListener('dblclick', this.dblClick);\n  }\n\n  start = evt => {\n    // Handle SVG conversion on behalf of tool implementations\n    const { x , y } = this.getSVGPoint(evt);\n    this.startDrawing(x, y, evt);\n  }\n\n  /**\n   * Tool implementations MUST override these\n   */\n\n  get isDrawing() {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n  startDrawing = evt => {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n  createEditableShape = annotation => {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n}\n\n// In addition, Tool implementations need to implement the following static methods\n\n// Tool.identifier = '...'\n\nTool.supports = annotation => {\n  throw new Error(IMPLEMENTATION_MISSING);\n}\n\n// Just some convenience shortcuts to client-core, for quicker\n// importing in plugins. (In a way, the intention is to make the\n// Tool class serve as a kind of mini-SDK).\nexport { default as Selection } from '@recogito/recogito-client-core/src/Selection';\nexport { default as WebAnnotation } from '@recogito/recogito-client-core/src/WebAnnotation';\n","const SIM_EVENTS = {\n  touchstart: 'mousedown',\n  touchmove: 'mousemove',\n  touchend: 'mouseup'\n}\n\nexport const isTouchDevice = () =>\n  'ontouchstart' in window ||\n    navigator.maxTouchPoints > 0 ||\n      navigator.msMaxTouchPoints > 0;\n\nexport const enableTouchTranslation = el => {\n\n  let pressAndHoldTrigger = null;\n\n  const simulateEvent = (type, e) => new MouseEvent(type, {\n    screenX: e.screenX,\n    screenY: e.screenY,\n    clientX: e.clientX,\n    clientY: e.clientY,\n    pageX: e.pageX,\n    pageY: e.pageY,\n    bubbles: true\n  });\n\n  const touchHandler = evt => {\n    const touch = evt.changedTouches[0];\n    const simulatedEvent = simulateEvent(SIM_EVENTS[evt.type], touch);\n\n    touch.target.dispatchEvent(simulatedEvent);\n    evt.preventDefault();\n\n    if (evt.type === 'touchstart' || evt.type === 'touchmove') {\n      pressAndHoldTrigger && clearTimeout(pressAndHoldTrigger);\n\n      pressAndHoldTrigger = setTimeout(() => {\n        const simulatedEvent = simulateEvent('dblclick', touch);\n        touch.target.dispatchEvent(simulatedEvent);\n      }, 800);\n    }\n\n    if (evt.type === 'touchend')\n      pressAndHoldTrigger && clearTimeout(pressAndHoldTrigger);\n  }\n\n  el.addEventListener('touchstart', touchHandler, true);\n  el.addEventListener('touchmove', touchHandler, true);\n  el.addEventListener('touchend', touchHandler, true);\n  el.addEventListener('touchcancel', touchHandler, true);\n\n}","import { SVG_NAMESPACE } from '../util/SVG';\n\n/** Helper that forces an un-namespaced node to SVG **/\nconst insertSVGNamespace = originalDoc => {\n  // Serialize and parse for the namespace to take effect on every node\n  const serializer = new XMLSerializer();\n  const str = serializer.serializeToString(originalDoc.documentElement);\n\n  // Doesn't seem that there's a clean cross-browser way for this...\n  const namespaced = str.replace('<svg>', `<svg xmlns=\"${SVG_NAMESPACE}\">`);\n\n  const parser = new DOMParser();\n  const namespacedDoc = parser.parseFromString(namespaced, \"image/svg+xml\");\n  return namespacedDoc.documentElement;\n}\n\nconst sanitize = doc => {\n  // Cf. https://github.com/mattkrick/sanitize-svg#readme  \n  // for the basic approach\n  const cleanEl = el => {\n    Array.from(el.attributes).forEach(attr => {\n      if (attr.name.startsWith('on'))\n        el.removeAttribute(attr.name)\n    });\n  }\n\n  // Remove script tags\n  const scripts = doc.getElementsByTagName('script');\n  Array.from(scripts).reverse().forEach(el =>\n    el.parentNode.removeChild(el));\n\n  // Remove on... attributes\n  cleanEl(doc);\n  Array.from(doc.querySelectorAll('*')).forEach(cleanEl);\n\n  return doc;\n}\n\nexport const svgFragmentToShape = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector) {\n    const parser = new DOMParser();\n\n    // Parse the XML document, assuming SVG\n    const { value } = selector;\n    const doc = parser.parseFromString(value, \"image/svg+xml\");\n\n    // SVG needs a namespace declaration - check if it's set or insert if not\n    const isPrefixDeclared = doc.lookupPrefix(SVG_NAMESPACE); // SVG declared via prefix\n    const isDefaultNamespaceSVG = doc.lookupNamespaceURI(null); // SVG declared as default namespace\n\n    if (isPrefixDeclared || isDefaultNamespaceSVG) {\n      return sanitize(doc).firstChild;\n    } else {\n      return sanitize(insertSVGNamespace(doc)).firstChild;\n    }\n  }\n}\n\nexport const drawEmbeddedSVG = annotation => {\n  const shape = svgFragmentToShape(annotation);\n\n  // Because we're nitpicky, we don't just draw the shape,\n  // but duplicate it, so we can have inner and an outer lines\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n\n  const inner = shape.cloneNode(true);\n  inner.setAttribute('class', 'a9s-inner');\n\n  const outer = shape.cloneNode(true);\n  outer.setAttribute('class', 'a9s-outer');\n\n  g.appendChild(outer);\n  g.appendChild(inner);\n\n  return g;\n}\n\nexport const toSVGTarget = (shape, image) => {\n  const inner = shape.querySelector('.a9s-inner').cloneNode(true);\n  inner.removeAttribute('class');\n  inner.removeAttribute('xmlns');\n\n  let serialized = inner.outerHTML || new XMLSerializer().serializeToString(inner);\n  serialized = serialized.replace(` xmlns=\"${SVG_NAMESPACE}\"`, '');\n\n  return {\n    source: image?.src,\n    selector: {\n      type: \"SvgSelector\",\n      value: `<svg>${serialized}</svg>`\n    }\n  }\n}\n\nexport const svgArea = annotation => {\n  const shape = svgFragmentToShape(annotation);\n  const nodeName = shape.nodeName.toLowerCase();\n\n  if (nodeName === 'polygon') \n    return polygonArea(shape);\n  else if (nodeName === 'circle')\n    return circleArea(shape);\n  else if (nodeName === 'ellipse')\n    return ellipseArea(shape);\n  else if (nodeName == 'path')\n    return pathArea(shape);\n  else\n    throw `Unsupported SVG shape type: ${nodeName}`;\n}\n\nconst polygonArea = polygon => {\n  const points = polygon.getAttribute('points')\n    .split(' ') // Split x/y tuples\n    .map(xy => xy.split(',').map(str => parseFloat(str.trim())));\n\n  let area = 0;\n  let j = points.length - 1;\n\n  for (let i=0; i < points.length; i++) {\n    area += (points[j][0] + points[i][0]) * (points[j][1] - points[i][1]);\n    j = i;\n  }\n\n  return Math.abs(0.5 * area);\n}\n\nconst circleArea = circle => {\n  const r = circle.getAttribute('r');\n  return r * r * Math.PI;\n}\n\nconst ellipseArea = ellipse => {\n  const rx = ellipse.getAttribute('rx');\n  const ry = ellipse.getAttribute('ry');\n  return rx * ry * Math.PI;\n}\n\nconst pathArea = path => {\n  const pointList = path.getAttribute('d').split('L');\n  let area = 0;\n\n  if(pointList.length > 1) {\n    var point = pointList[pointList.length - 1].trim().split(' ');\n    let lastX = parseFloat(point[0]);\n    let lastY = parseFloat(point[1]);\n\n    point = pointList[0].substring(1).trim().split(' ');\n    let x = parseFloat(point[0]);\n    let y = parseFloat(point[1]);\n    area += (lastX + x) * (lastY - y);\n    lastX = x;\n    lastY = y;\n\n    for (let i = 1; i < pointList.length; i++) {\n      point = pointList[i].trim().split(' ');\n      x = parseFloat(point[0]);\n      y = parseFloat(point[1]);\n      area += (lastX + x) * (lastY - y);\n      lastX = x;\n      lastY = y;\n    }\n  }\n\n  return Math.abs(0.5 * area);\n}","import { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\n\n/** Shorthand to apply the given (x, y, r) to the SVG shape **/\nconst setXYR = (shape, x, y, r) => {  \n  shape.setAttribute('cx', x);\n  shape.setAttribute('cy', y);\n  shape.setAttribute('r', r);\n}\n\n/** \n * Draws an SVG circle, either from an annotation, or an\n * (cx, cy, r)-tuple.\n */\nexport const drawCircle = (cx, cy, r) => {\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n  const outerCircle  = document.createElementNS(SVG_NAMESPACE, 'circle');\n  const innerCircle  = document.createElementNS(SVG_NAMESPACE, 'circle');\n\n  innerCircle.setAttribute('class', 'a9s-inner');\n  setXYR(innerCircle, cx, cy, r);\n\n  outerCircle.setAttribute('class', 'a9s-outer');\n  setXYR(outerCircle, cx, cy, r);\n\n  g.appendChild(outerCircle);\n  g.appendChild(innerCircle);\n\n  return g;\n}\n\nexport const setCircleSize = (g, cx, cy, r) => {\n  const innerCircle = g.querySelector('.a9s-inner');\n  const outerCircle = g.querySelector('.a9s-outer');\n  \n  setXYR(innerCircle, cx, cy, r);\n  setXYR(outerCircle, cx, cy, r);\n}\n\nexport const getCircleSize = g => {\n  const outerCircle = g.querySelector('.a9s-outer');\n\n  const cx = parseFloat(outerCircle.getAttribute('cx'));\n  const cy = parseFloat(outerCircle.getAttribute('cy'));\n  const r = parseFloat(outerCircle.getAttribute('r'));\n  \n  return { cx, cy, r };\n}","import { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { getCircleSize } from './Circle';\n\nexport default class CircleMask {\n\n  constructor(imageDimensions, circle) {\n    this.w = imageDimensions.naturalWidth;\n    this.h = imageDimensions.naturalHeight;\n\n    this.circle = circle;\n\n    const { cx, cy, r } = getCircleSize(this.circle);\n    const tx = ((cx + r) > this.w) ? this.w - r : cx;\n    const ty = ((cy + r) > this.h) ? this.h - r : cy + r;\n\n    this.mask = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.mask.setAttribute('fill-rule', 'evenodd');    \n    this.mask.setAttribute('class', 'a9s-selection-mask');\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${tx} ${ty} a ${r} ${r} 0 1 1 1 0`);\n  }\n\n  redraw = () => {\n    const { cx, cy, r } = getCircleSize(this.circle);\n\n    const tx = ((cx + r) > this.w) ? this.w - r : cx;\n    const ty = ((cy + r) > this.h) ? this.h - r : cy + r;\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${tx} ${ty} a ${r} ${r} 0 1 1 1 0`);\n  }\n\n  get element() {\n    return this.mask;\n  }\n\n  destroy = () =>\n    this.mask.parentNode.removeChild(this.mask)\n\n}","import { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { drawCircle, setCircleSize } from './Circle';\nimport Mask from './CircleMask';\n\n/**\n * A 'rubberband' selection tool for creating a circle by\n * clicking and dragging.\n */\nexport default class RubberbandCircle {\n\n  constructor(anchorX, anchorY, g, env) {\n    this.anchor = [ anchorX, anchorY ];\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.circle = drawCircle(anchorX, anchorY, 2);\n    this.circle.setAttribute('class', 'a9s-selection');\n\n    this.mask = new Mask(env.image, this.circle);\n\n    // We make the selection transparent to \n    // pointer events because it would interfere with the \n    // rendered annotations' mouseleave/enter events\n    this.group.style.pointerEvents = 'none';\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n    this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.circle);\n\n    g.appendChild(this.group);\n  }\n\n  get element() {\n    return this.circle;\n  }\n\n  dragTo = (oppositeX, oppositeY) => {\n    const { naturalWidth, naturalHeight } = this.env.image;\n\n    // Make visible\n    this.group.style.display = null;\n\n    const w = oppositeX - this.anchor[0];\n    const h = oppositeY - this.anchor[1];\n    const r = Math.max(1, Math.pow(w ** 2 + h ** 2, 0.5) / 2);\n\n    const cx = this.anchor[0] + w / 2;\n    const cy = this.anchor[1] + h / 2;\n\n    if ((cx-r < 0 || cx + r > naturalWidth) || (cy-r < 0 || cy + r > naturalHeight)) return;\n    \n    setCircleSize(this.circle, cx, cy, r);\n    this.mask.redraw();\n  }\n\n  getBoundingClientRect = () => \n    this.circle.getBoundingClientRect();\n\n  toSelection = () => {\n    return new Selection(toSVGTarget(this.group, this.env.image));\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n\n    this.mask = null;\n    this.circle = null;\n    this.group = null;\n  }\n\n}","import { ToolLike } from './Tool';\n\nconst IMPLEMENTATION_MISSING = \"An implementation is missing\";\n\nexport default class EditableShape extends ToolLike {\n\n  constructor(annotation, g, config, env) {\n    super(g, config, env);\n\n    this.annotation = annotation;\n\n    // Implementations need to override the handles list\n    this.handles = [];\n\n    // Bit of a hack. If we are dealing with a 'real' image, we enable\n    // reponsive mode. OpenSeadragon handles scaling in a different way,\n    // so we don't need responsive mode.\n    const { image } = env;\n    if (image instanceof Element || image instanceof HTMLDocument)\n      this.enableResponsive();\n  }\n\n  enableResponsive = () => {\n    if (window.ResizeObserver) {\n      this.resizeObserver = new ResizeObserver(() => {\n        const svgBounds = this.svg.getBoundingClientRect();\n        const { width, height } = this.svg.viewBox.baseVal;\n\n        const scale = Math.max(\n          width / svgBounds.width,\n          height / svgBounds.height\n        );\n\n        this.scaleHandles(scale);\n      });\n\n      this.resizeObserver.observe(this.svg.parentNode);\n    }\n  }\n  \n  /**\n   * Implementations MUST override this method!\n   * \n   * Must return the 'g' element with the a9s-annotation class.\n   */\n  get element() {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n  /**\n   * Implementations MUST override this method!\n   * \n   * The annotation argument MUST be used to update\n   * the current state of the shape. It MUST NOT\n   * be stored as 'this.annotation'! 'this.annotation'\n   * MUST remain the original annotation at the time\n   * this EditableShape was created, because we will\n   * need it again in case the user cancels editing.\n   * \n   * Thinking of it in React terms, 'this.annotation'\n   * has the same purpose as props.annotation, whereas\n   * this method affects state.\n   */\n  updateState = annotation => {\n    throw new Error(IMPLEMENTATION_MISSING);\n  }\n\n  /**\n   * Implementations MAY extend this (calling super),\n   * to destroy SVG elements, mask, etc.\n   */\n  destroy() {\n    if (this.resizeObserver)\n      this.resizeObserver.disconnect();\n\n    this.resizeObserver = null;\n  }\n\n}\n","import { addClass, SVG_NAMESPACE } from './SVG';\n\nconst isFirefox = /firefox/i.test(navigator.userAgent);\n\nconst formatSvgEl = (svgEl, x, y, w, h) => {\n  svgEl.setAttribute('width', w);\n  svgEl.setAttribute('height', h);\n\n  // Argh - Firefox produces broken SVG bounds for nested SVG\n  if (isFirefox) {\n    svgEl.setAttribute('x', 0);\n    svgEl.setAttribute('y', 0);\n    svgEl.setAttribute('transform', `translate(${x}, ${y})`);  \n  } else {\n    svgEl.setAttribute('x', x);\n    svgEl.setAttribute('y', y);\n  }\n}\n\nconst appendFormatterEl = (formatterEl, shape) => {\n  const { x, y, width, height } = shape.getBBox();\n\n  const svgEl = document.createElementNS(SVG_NAMESPACE, 'svg');\n  svgEl.setAttribute('class', 'a9s-formatter-el');\n\n  formatSvgEl(svgEl, x, y, width, height);\n\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n  g.appendChild(formatterEl);y\n\n  svgEl.appendChild(g);\n  \n  shape.append(svgEl);\n}\n\n/**\n * A formatter is a user-defined function that takes an annotation as input,\n * and returns either a string, or an object. If a string is returned, this\n * will be appended to the annotation element CSS class list. Otherwise, the\n * object can have the following properties: \n * \n * - 'className' added to the CSS class list\n * - 'data-*' added as data attributes\n * - 'style' a list of CSS styles (in the form of a string) \n */\nexport const format = (shape, annotation, formatter) => {\n  // The formatter can be undefined\n  if (!formatter)\n    return shape;\n\n  const format = formatter(annotation);\n\n  // The formatter is allowed to return null\n  if (!format)\n    return shape;\n\n  if (typeof format === 'string' || format instanceof String) {\n    // Apply CSS class\n    addClass(shape, format); \n  } else if (format.nodeType === Node.ELEMENT_NODE) {\n    appendFormatterEl(format, shape);\n  } else {\n    const { className, style, element } = format;\n\n    if (className)\n      addClass(shape, className);\n\n    if (style) {\n      const outer = shape.querySelector('.a9s-outer');\n      const inner = shape.querySelector('.a9s-inner');\n\n      if (outer && inner) {\n        outer.setAttribute('style', 'display:none');\n        inner.setAttribute('style', style);\n      } else {\n        shape.setAttribute('style', style);\n      }\n    }\n\n    if (element)\n      appendFormatterEl(element, shape);\n\n    for (const key in format) {\n      if (format.hasOwnProperty(key) && key.startsWith('data-')) {\n        shape.setAttribute(key, format[key]);\n      }\n    }\n  }\n}\n\nexport const setFormatterElSize = (group, x, y, w, h) => {\n  const formatterEl = group.querySelector('.a9s-formatter-el');\n  if (formatterEl)\n    formatSvgEl(formatterEl, x, y, w, h);\n}","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { drawEmbeddedSVG, svgFragmentToShape, toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@recogito/annotorious/src/util/Formatting';\nimport { getCircleSize, setCircleSize } from './Circle';\nimport Mask from './CircleMask';\n\n/**\n * An editable circle shape.\n */\nexport default class EditableCircle extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <circle class=\"a9s-outer\" ... />\n    //     <circle class=\"a9s-inner\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //   </g> \n    // </g>\n\n    // 'g' for the editable circle compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.circle = drawEmbeddedSVG(annotation);\n    this.circle.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.circle));\n\n    this.mask = new Mask(env.image, this.circle);\n\n    this.containerGroup.appendChild(this.mask.element);\n\n    // The 'element' = circle + handles\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.circle);    \n\n    const { cx, cy, r } = getCircleSize(this.circle);\n\n    this.handles = [\n      [ cx, cy - r ],\n      [ cx + r, cy ],\n      [ cx, cy + r ],\n      [ cx - r, cy ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n\n      return handle;\n    });\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.circle, annotation, config.formatter);\n\n    // The grabbed element (handle or entire group), if any\n    this.grabbedElem = null; \n\n    // Mouse xy offset inside the shape, if mouse pressed\n    this.grabbedAt = null;\n  }\n\n  setSize = (cx, cy, r) => {\n    setCircleSize(this.circle, cx, cy, r);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, r, r);\n\n    const [ topleft, topright, bottomright, bottomleft] = this.handles;\n    this.setHandleXY(topleft, cx, cy - r);\n    this.setHandleXY(topright, cx + r, cy);\n    this.setHandleXY(bottomright, cx, cy + r);\n    this.setHandleXY(bottomleft, cx - r, cy);\n  }\n\n  stretchCorners = (draggedHandleIdx, anchorHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n\n    var mouseX = mousePos.x;\n    var mouseY = mousePos.y;\n    var width = 0;\n    var height = 0;\n    var r;\n    if (draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      mouseX = anchor.x;\n      height = mouseY - anchor.y;\n      r = Math.abs(height) / 2;\n    } else {\n      mouseY = anchor.y;\n      width = mouseX - anchor.x;\n      r = Math.abs(width) / 2;\n    }\n\n    const x = width > 0 ? anchor.x : mouseX;\n    const y = height > 0 ? anchor.y : mouseY;\n    const w = Math.abs(width);\n    const h = Math.abs(height);\n    const cx = x + w/2;\n    const cy = y + h/2;\n\n    setCircleSize(this.circle, cx, cy, r);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, r, r);\n\n    if (draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      var idx0 = 0;\n      var idx2 = 2;\n      if(draggedHandleIdx == 0 && height > 0 || draggedHandleIdx == 2 && height < 0) {\n        idx0 = 2;\n        idx2 = 0;\n      }\n      this.setHandleXY(this.handles[idx0], cx, cy - r);\n      this.setHandleXY(this.handles[idx2], cx, cy + r);\n      this.setHandleXY(this.handles[1], cx + r, cy);\n      this.setHandleXY(this.handles[3], cx - r, cy);\n    } else {\n      var idx3 = 3;\n      var idx1 = 1;\n      if (draggedHandleIdx == 1 && width > 0 || draggedHandleIdx == 3 && width < 0) {\n        idx3 = 1;\n        idx1 = 3;\n      }\n      this.setHandleXY(this.handles[idx3], cx + r, cy);\n      this.setHandleXY(this.handles[idx1], cx - r, cy);\n      this.setHandleXY(this.handles[0], cx, cy - r);\n      this.setHandleXY(this.handles[2], cx, cy + r);\n    }\n  }\n\n  onGrab = grabbedElem => evt => {\n    this.grabbedElem = grabbedElem; \n    \n    const pos = this.getSVGPoint(evt);\n    const { cx, cy } = getCircleSize(this.circle);\n    \n    this.grabbedAt = { x: pos.x - cx, y: pos.y - cy };\n  }\n\n  onMouseMove = evt => {\n    const constrain = (coord, max) =>\n      coord < 0 ? 0 : ( coord > max ? max : coord);\n\n    if (this.grabbedElem) {\n      const pos = this.getSVGPoint(evt);\n\n      if (this.grabbedElem === this.circle) {\n        const { r } = getCircleSize(this.circle);\n\n        const { naturalWidth, naturalHeight } = this.env.image;\n\n        const cx = Math.max(constrain(pos.x - this.grabbedAt.x, naturalWidth - r), r);\n        const cy = Math.max(constrain(pos.y - this.grabbedAt.y, naturalHeight - r), r);\n\n        this.setSize(cx, cy, r); \n        this.emit('update', toSVGTarget(this.circle, this.env.image)); \n      } else {\n        // Mouse position replaces one of the corner coords, depending\n        // on which handle is the grabbed element\n        const handleIdx = this.handles.indexOf(this.grabbedElem);\n        const oppositeHandle = handleIdx < 2 ? \n          this.handles[handleIdx + 2] : this.handles[handleIdx - 2];\n\n        this.stretchCorners(handleIdx, oppositeHandle, pos);\n        this.emit('update', toSVGTarget(this.circle, this.env.image));\n      }\n    }\n  }\n\n  onMouseUp = () => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  get element() { \n    return this.elementGroup; \n  }\n\n  updateState = annotation => {\n    const shape = svgFragmentToShape(annotation);\n\n    const cx = parseFloat(shape.getAttribute('cx'));\n    const cy = parseFloat(shape.getAttribute('cy'));\n    const r =  parseFloat(shape.getAttribute('r'));\n\n    this.setSize(cx, cy, r);\n  }\n\n  destroy() {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}\n","import Tool from '@recogito/annotorious/src/tools/Tool';\nimport RubberbandCircle from './RubberbandCircle';\nimport EditableCircle from './EditableCircle';\n\n/**\n * A rubberband selector for circle selections.\n */\nexport default class RubberbandCircleTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    this.rubberband = null;\n  }\n\n  startDrawing = (x, y) => {\n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp\n    });\n\n    this.rubberband = new RubberbandCircle(x, y, this.g, this.env);\n  }\n\n  stop = () => {\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo(x, y);\n  \n  onMouseUp = () => {\n    this.detachListeners();\n    this.started = false;\n\n    const { width, height } = this.rubberband.getBoundingClientRect();\n\n    const minWidth = this.config.minSelectionWidth || 4;\n    const minHeight = this.config.minSelectionHeight || 4;\n\n    if (width >= minWidth && height >= minHeight) {\n      // Emit the SVG shape with selection attached    \n      const { element } = this.rubberband;\n      element.annotation = this.rubberband.toSelection();\n\n      // Emit the completed shape...\n      this.emit('complete', element);\n    } else {\n      this.emit('cancel');\n    }\n\n    this.stop();\n  }\n\n  get isDrawing() {\n    return this.rubberband != null;\n  }\n  \n  createEditableShape = annotation =>\n    new EditableCircle(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandCircleTool.identifier = 'circle';\n\nRubberbandCircleTool.supports = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector)\n    return selector.value?.match(/^<svg.*<circle/g);\n}","import { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\n\n/** Shorthand to apply the given (x, y, rx, ry) to the SVG shape **/\nconst setXYR = (shape, x, y, rx, ry) => {  \n  shape.setAttribute('cx', x);\n  shape.setAttribute('cy', y);\n  shape.setAttribute('rx', rx);\n  shape.setAttribute('ry', ry);\n}\n\n/** \n * Draws an SVG ellipse, either from an annotation, or an\n * (cx, cy, rx, ry)-tuple.\n */\nexport const drawEllipse = (cx, cy, rx, ry) => {\n  const g = document.createElementNS(SVG_NAMESPACE, 'g');\n  const innerEllipse  = document.createElementNS(SVG_NAMESPACE, 'ellipse');\n  const outerEllipse  = document.createElementNS(SVG_NAMESPACE, 'ellipse');\n\n  innerEllipse.setAttribute('class', 'a9s-inner');\n  setXYR(innerEllipse, cx, cy, rx, ry);\n\n  outerEllipse.setAttribute('class', 'a9s-outer');\n  setXYR(outerEllipse, cx, cy, rx, ry);\n\n  g.appendChild(outerEllipse);\n  g.appendChild(innerEllipse);\n\n  return g;\n}\n\nexport const setEllipseSize = (g, cx, cy, rx, ry) => {\n  const innerEllipse = g.querySelector('.a9s-inner');\n  const outerEllipse = g.querySelector('.a9s-outer');\n\n  setXYR(innerEllipse, cx, cy, rx, ry);\n  setXYR(outerEllipse, cx, cy, rx, ry);\n}\n\nexport const getEllipseSize = g => {\n  const outerEllipse = g.querySelector('.a9s-outer');\n\n  const cx = parseFloat(outerEllipse.getAttribute('cx'));\n  const cy = parseFloat(outerEllipse.getAttribute('cy'));\n  const rx = parseFloat(outerEllipse.getAttribute('rx'));\n  const ry = parseFloat(outerEllipse.getAttribute('ry'));\n  \n  return { cx, cy, rx, ry };\n}","import { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { getEllipseSize } from './Ellipse';\n\nexport default class EllipseMask {\n\n  constructor(imageDimensions, ellipse) {\n    this.w = imageDimensions.naturalWidth;\n    this.h = imageDimensions.naturalHeight;\n\n    this.ellipse = ellipse;\n\n    const { cx, cy, rx, ry } = getEllipseSize(this.ellipse);\n\n    const ty = cy + ry;\n\n    this.mask = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.mask.setAttribute('fill-rule', 'evenodd');    \n    this.mask.setAttribute('class', 'a9s-selection-mask');\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${cx} ${ty} a ${rx} ${ry} 0 1 1 1 0`);\n  }\n\n  redraw = () => {\n    const { cx, cy, rx, ry } = getEllipseSize(this.ellipse);\n\n    const ty = cy + ry;\n\n    this.mask.setAttribute('d', `M0 0 h${this.w} v${this.h} h-${this.w} z M${cx} ${ty} a ${rx} ${ry} 0 1 1 1 0`);\n  }\n\n  get element() {\n    return this.mask;\n  }\n\n  destroy = () =>\n    this.mask.parentNode.removeChild(this.mask)\n\n}","import { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { drawEllipse, setEllipseSize } from './Ellipse';\nimport Mask from './EllipseMask';\n\n/**\n * A 'rubberband' selection tool for creating a ellipse by\n * clicking and dragging.\n */\nexport default class RubberbandEllipse {\n\n  constructor(anchorX, anchorY, g, env) {\n    this.anchor = [ anchorX, anchorY ];\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.ellipse = drawEllipse(anchorX, anchorY, 2);\n    this.ellipse.setAttribute('class', 'a9s-selection');\n\n    this.mask = new Mask(env.image, this.ellipse);\n\n    // We make the selection transparent to \n    // pointer events because it would interfere with the \n    // rendered annotations' mouseleave/enter events\n    this.group.style.pointerEvents = 'none';\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n    this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.ellipse);\n\n    g.appendChild(this.group);\n  }\n\n  get element() {\n    return this.ellipse;\n  }\n\n  dragTo = (oppositeX, oppositeY) => {\n    // Make visible\n    this.group.style.display = null;\n\n    const w = oppositeX - this.anchor[0];\n    const h = oppositeY - this.anchor[1];\n\n    const cx = w > 0 ? this.anchor[0] + w / 2 : oppositeX + w / 2;\n    const cy = h > 0 ? this.anchor[1] + h / 2 : oppositeY + h / 2;\n\n    const rx = Math.abs(w / 2);\n    const ry = Math.abs(h / 2);\n\n    setEllipseSize(this.ellipse, cx, cy, rx, ry);\n    this.mask.redraw();\n  }\n\n  getBoundingClientRect = () => \n    this.ellipse.getBoundingClientRect();\n\n  toSelection = () => {\n    return new Selection(toSVGTarget(this.group, this.env.image));\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n\n    this.mask = null;\n    this.ellipse = null;\n    this.group = null;\n  }\n\n}","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { drawEmbeddedSVG, svgFragmentToShape, toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@recogito/annotorious/src/util/Formatting';\nimport { getEllipseSize, setEllipseSize } from './Ellipse';\nimport Mask from './EllipseMask';\n\n/**\n * An editable ellipse shape.\n */\nexport default class EditableEllipse extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <ellipse class=\"a9s-outer\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //   </g> \n    // </g>\n\n    // 'g' for the editable ellipse compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.ellipse = drawEmbeddedSVG(annotation);\n    this.ellipse.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.ellipse));\n\n    this.mask = new Mask(env.image, this.ellipse);\n\n    this.containerGroup.appendChild(this.mask.element);\n\n    // The 'element' = ellipse + handles\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.ellipse);    \n\n    const { cx, cy, rx, ry } = getEllipseSize(this.ellipse);\n\n    this.handles = [\n      [ cx, cy - ry ],\n      [ cx + rx, cy ],\n      [ cx, cy + ry ],\n      [ cx - rx, cy ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n\n      return handle;\n    });\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.ellipse, annotation, config.formatter);\n\n    // The grabbed element (handle or entire group), if any\n    this.grabbedElem = null; \n\n    // Mouse xy offset inside the shape, if mouse pressed\n    this.grabbedAt = null;\n  }\n\n  setSize = (cx, cy, rx, ry) => {\n    setEllipseSize(this.ellipse, cx, cy, rx, ry);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, rx, ry);\n\n    const [ topleft, topright, bottomright, bottomleft] = this.handles;\n    this.setHandleXY(topleft, cx, cy - ry);\n    this.setHandleXY(topright, cx + rx, cy);\n    this.setHandleXY(bottomright, cx, cy + ry);\n    this.setHandleXY(bottomleft, cx - rx, cy);\n  }\n\n  stretchCorners = (draggedHandleIdx, anchorHandle, leftHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n    const anchorLeft = this.getHandleXY(leftHandle);\n\n    var mouseX = mousePos.x;\n    var mouseY = mousePos.y;\n    var rx = 0;\n    var ry = 0;\n    if(draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      mouseX = anchor.x;\n    } else {\n      mouseY = anchor.y;\n    }\n\n    const width = mouseX - anchor.x;\n    const height = mouseY - anchor.y;\n    const x = width > 0 ? anchor.x : mouseX;\n    const y = height > 0 ? anchor.y : mouseY;\n    const w = Math.abs(width);\n    const h = Math.abs(height);\n    const cx = x + w/2;\n    const cy = y + h/2;\n    var rx = w/2;\n    var ry = h/2;\n    if(draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      rx = Math.abs(anchor.x - anchorLeft.x);\n    } else {\n      ry = Math.abs(anchor.y - anchorLeft.y);\n    }\n\n    setEllipseSize(this.ellipse, cx, cy, rx, ry);\n    this.mask.redraw();\n    setFormatterElSize(this.elementGroup, cx, cy, rx, ry);\n\n    if (draggedHandleIdx == 0 || draggedHandleIdx == 2) {\n      var idx0 = 0;\n      var idx2 = 2;\n      if(draggedHandleIdx == 0 && height > 0 || draggedHandleIdx == 2 && height < 0) {\n        idx0 = 2;\n        idx2 = 0;\n      }\n      this.setHandleXY(this.handles[idx0], cx, cy - ry);\n      this.setHandleXY(this.handles[idx2], cx, cy + ry);\n      this.setHandleXY(this.handles[1], cx + rx, cy);\n      this.setHandleXY(this.handles[3], cx - rx, cy);\n    } else {\n      var idx3 = 3;\n      var idx1 = 1;\n      if (draggedHandleIdx == 1 && width > 0 || draggedHandleIdx == 3 && width < 0) {\n        idx3 = 1;\n        idx1 = 3;\n      }\n      this.setHandleXY(this.handles[idx3], cx + rx, cy);\n      this.setHandleXY(this.handles[idx1], cx - rx, cy);\n      this.setHandleXY(this.handles[0], cx, cy - ry);\n      this.setHandleXY(this.handles[2], cx, cy + ry);\n    }\n  }\n\n  onGrab = grabbedElem => evt => {\n    this.grabbedElem = grabbedElem; \n\n    const pos = this.getSVGPoint(evt);\n    const { cx, cy } = getEllipseSize(this.ellipse);\n\n    this.grabbedAt = { x: pos.x - cx, y: pos.y - cy };\n  }\n\n  onMouseMove = evt => {\n    const constrain = (coord, max) =>\n      coord < 0 ? 0 : ( coord > max ? max : coord);\n\n    if (this.grabbedElem) {\n      const pos = this.getSVGPoint(evt);\n\n      if (this.grabbedElem === this.ellipse) {\n        const { rx, ry } = getEllipseSize(this.ellipse);\n\n        const { naturalWidth, naturalHeight } = this.env.image;\n\n        const cx = constrain(pos.x - this.grabbedAt.x, naturalWidth - rx);\n        const cy = constrain(pos.y - this.grabbedAt.y, naturalHeight - ry);\n\n        this.setSize(cx, cy, rx, ry); \n        this.emit('update', toSVGTarget(this.ellipse, this.env.image));\n      } else {\n        // Mouse position replaces one of the corner coords, depending\n        // on which handle is the grabbed element\n        const handleIdx = this.handles.indexOf(this.grabbedElem);\n        const oppositeHandle = handleIdx < 2 ? \n          this.handles[handleIdx + 2] : this.handles[handleIdx - 2];\n        const leftHandle = this.handles[(handleIdx + 3) % 4];\n\n        this.stretchCorners(handleIdx, oppositeHandle, leftHandle, pos);\n        this.emit('update', toSVGTarget(this.ellipse, this.env.image));\n      }\n    }\n  }\n\n  onMouseUp = () => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  get element() { \n    return this.elementGroup; \n  }\n\n  updateState = annotation => {\n    const shape = svgFragmentToShape(annotation);\n\n    const cx = parseFloat(shape.getAttribute('cx'));\n    const cy = parseFloat(shape.getAttribute('cy'));\n    const rx = parseFloat(shape.getAttribute('rx'));\n    const ry = parseFloat(shape.getAttribute('ry'));\n    \n    this.setSize(cx, cy, rx, ry);\n  }\n\n  destroy() {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}","import Tool from '@recogito/annotorious/src/tools/Tool';\nimport RubberbandEllipse from './RubberbandEllipse';\nimport EditableEllipse from './EditableEllipse';\n\n/**\n * A rubberband selector for ellipse selections.\n */\nexport default class RubberbandEllipseTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    this.rubberband = null;\n  }\n\n  startDrawing = (x, y) => {\n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp\n    });\n\n    this.rubberband = new RubberbandEllipse(x, y, this.g, this.env);\n  }\n\n  stop = () => {\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo(x, y);\n  \n  onMouseUp = () => {\n    this.detachListeners();\n    this.started = false;\n\n    const { width, height } = this.rubberband.getBoundingClientRect();\n\n    const minWidth = this.config.minSelectionWidth || 4;\n    const minHeight = this.config.minSelectionHeight || 4;\n\n    if (width >= minWidth && height >= minHeight) {\n      // Emit the SVG shape with selection attached    \n      const { element } = this.rubberband;\n      element.annotation = this.rubberband.toSelection();\n\n      // Emit the completed shape...\n      this.emit('complete', element);\n    } else {\n      this.emit('cancel');\n    }\n\n    this.stop();\n  }\n\n  get isDrawing() {\n    return this.rubberband != null;\n  }\n  \n  createEditableShape = annotation =>\n    new EditableEllipse(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandEllipseTool.identifier = 'ellipse';\n\nRubberbandEllipseTool.supports = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector)\n    return selector.value?.match(/^<svg.*<ellipse/g);\n}","import { Selection } from '@recogito/annotorious/src/tools/Tool';\nimport { toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\n// TODO optional: mask to dim the outside area\n//import Mask from './FreehandMask';\n\n/**\n * A 'rubberband' selection tool for creating freehand drawing by\n * clicking and dragging.\n */\nexport default class RubberbandFreehand {\n\n  constructor(anchor, g, env) {\n    this.points = [ anchor ];\n\n    this.env = env;\n\n    this.group = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.freehand = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.freehand.setAttribute('class', 'a9s-selection');\n\n    this.outer = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.outer.setAttribute('class', 'a9s-outer');\n\n    this.inner = document.createElementNS(SVG_NAMESPACE, 'path');\n    this.inner.setAttribute('class', 'a9s-inner');\n\n    this.setPoints(this.points);\n\n   // TODO optional: mask to dim the outside area\n   // this.mask = new Mask(env.image, this.inner);\n\n    this.freehand.appendChild(this.outer);\n    this.freehand.appendChild(this.inner);\n\n    // Additionally, selection remains hidden until \n    // the user actually moves the mouse\n    this.group.style.display = 'none';\n\n   // TODO optional: mask to dim the outside area\n   // this.group.appendChild(this.mask.element);\n    this.group.appendChild(this.freehand);\n\n    g.appendChild(this.group);\n  }\n\n  setPoints = points => {\n    var str = points.map(pt => `L${pt[0]} ${pt[1]}`).join(' ');\n    str = 'M' + str.substring(1);\n    this.outer.setAttribute('d', str);\n    this.inner.setAttribute('d', str);\n  }\n\n  getBoundingClientRect = () =>\n    this.outer.getBoundingClientRect();\n\n  dragTo = xy => {\n    // Make visible\n    this.group.style.display = null;\n\n    //TODO optional: edge smoothing\n\n    this.addPoint(xy);\n\n   // TODO optional: mask to dim the outside area\n   // this.mask.redraw();\n  }\n\n  addPoint = xy => {\n    this.points = [ ...this.points, xy ];\n    this.setPoints(this.points);   \n   // TODO optional: mask to dim the outside area\n   // this.mask.redraw();\n  }\n\n  get element() {\n    return this.freehand;\n  }\n\n  destroy = () => {\n    this.group.parentNode.removeChild(this.group);\n    this.freehand = null;    \n    this.group = null;\n  }\n\n  toSelection = () => {\n    return new Selection(toSVGTarget(this.group, this.env.image));\n  }\n\n}\n","import EditableShape from '@recogito/annotorious/src/tools/EditableShape';\nimport { drawEmbeddedSVG, svgFragmentToShape, toSVGTarget } from '@recogito/annotorious/src/selectors/EmbeddedSVG';\nimport { SVG_NAMESPACE } from '@recogito/annotorious/src/util/SVG';\nimport { format, setFormatterElSize } from '@recogito/annotorious/src/util/Formatting';\n// TODO optional: mask to dim the outside area\n//import Mask from './FreehandMask';\n\nconst getPoints = shape => {\n  const pointList = shape.getAttribute('d').split('L');\n  const points = [];\n  if(pointList.length > 0) {\n    var point = pointList[0].substring(1).trim().split(' ');\n    points.push({ x: parseFloat(point[0]), y: parseFloat(point[1]) });\n\n    for (let i = 1; i < pointList.length; i++) {\n      var point = pointList[i].trim().split(' ');\n      points.push({ x: parseFloat(point[0]), y: parseFloat(point[1]) });\n    }\n  }\n\n  return points;\n}\n\nconst getBBox = shape => {\n  return shape.querySelector('.a9s-inner').getBBox();\n}\n\n/**\n * An editable freehand drawing.\n */\nexport default class EditableFreehand extends EditableShape {\n\n  constructor(annotation, g, config, env) {\n    super(annotation, g, config, env);\n\n    this.svg.addEventListener('mousemove', this.onMouseMove);\n    this.svg.addEventListener('mouseup', this.onMouseUp);\n\n    // SVG markup for this class looks like this:\n    // \n    // <g>\n    //   <path class=\"a9s-selection mask\"... />\n    //   <g> <-- return this node as .element\n    //     <polygon class=\"a9s-outer\" ... />\n    //     <polygon class=\"a9s-inner\" ... />\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     <g class=\"a9s-handle\" ...> ... </g>\n    //     ...\n    //   </g> \n    // </g>\n\n    // 'g' for the editable free drawing compound shape\n    this.containerGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n\n    this.shape = drawEmbeddedSVG(annotation);\n\n   // TODO optional: mask to dim the outside area\n   // this.mask = new Mask(env.image, this.shape.querySelector('.a9s-inner'));\n    \n   // this.containerGroup.appendChild(this.mask.element);\n\n    this.elementGroup = document.createElementNS(SVG_NAMESPACE, 'g');\n    this.elementGroup.setAttribute('class', 'a9s-annotation editable selected');\n    this.elementGroup.appendChild(this.shape);\n\n    this.containerGroup.appendChild(this.elementGroup);\n    g.appendChild(this.containerGroup);\n\n    format(this.shape, annotation, config.formatter);\n\n    this.shape.querySelector('.a9s-inner')\n      .addEventListener('mousedown', this.onGrab(this.shape));\n\n    const { x, y, width, height } = getBBox(this.shape);\n\n    // TODO optional: handles to stretch the shape\n/*    this.handles = [\n      [ x, y ], \n      [ x + width, y ], \n      [ x + width, y + height ], \n      [ x, y + height ]\n    ].map(t => { \n      const [ x, y ] = t;\n      const handle = this.drawHandle(x, y);\n\n      handle.addEventListener('mousedown', this.onGrab(handle));\n      this.elementGroup.appendChild(handle);\n\n      return handle;\n    });*/\n\n    // The grabbed element (handle or entire shape), if any\n    this.grabbedElem = null;\n\n    // Mouse grab point\n    this.grabbedAt = null;\n  }\n\n  setPoints = (points) => {\n    // Not using .toFixed(1) because that will ALWAYS\n    // return one decimal, e.g. \"15.0\" (when we want \"15\")\n    const round = num => Math.round(10 * num) / 10;\n\n    var str = points.map(pt => `L${round(pt.x)} ${round(pt.y)}`).join(' ');\n    str = 'M' + str.substring(1);\n\n    const inner = this.shape.querySelector('.a9s-inner');\n    inner.setAttribute('d', str);\n\n    const outer = this.shape.querySelector('.a9s-outer');\n    outer.setAttribute('d', str);\n\n    const { x, y, width, height } = outer.getBBox();\n\n    // TODO optional: mask to dim the outside area\n    // this.mask.redraw();\n\n    // TODO optional: handles to stretch the shape\n/*    const [ topleft, topright, bottomright, bottomleft] = this.handles;\n\n    this.setHandleXY(topleft, x, y);\n    this.setHandleXY(topright, x + width, y);\n    this.setHandleXY(bottomright, x + width, y + height);\n    this.setHandleXY(bottomleft, x, y + height);*/\n\n    setFormatterElSize(this.elementGroup, x, y, width, height);\n  }\n\n    // TODO optional: handles to stretch the shape\n/*  stretchCorners = (draggedHandleIdx, anchorHandle, mousePos) => {\n    const anchor = this.getHandleXY(anchorHandle);\n  }*/\n\n  onGrab = grabbedElem => evt => {\n    this.grabbedElem = grabbedElem;\n    const pos = this.getSVGPoint(evt);\n    this.grabbedAt = { x: pos.x, y: pos.y };\n  }\n\n  onMouseMove = evt => {\n    const constrain = (coord, delta, max) =>\n      coord + delta < 0 ? -coord : (coord + delta > max ? max - coord : delta);\n\n    if (this.grabbedElem) {\n      const pos = this.getSVGPoint(evt);\n\n      const { x, y, width, height } = getBBox(this.shape);\n\n      if (this.grabbedElem === this.shape) {\n\n        const { naturalWidth, naturalHeight } = this.env.image;\n\n        const dx = constrain(x, pos.x - this.grabbedAt.x, naturalWidth - width);\n        const dy = constrain(y, pos.y - this.grabbedAt.y, naturalHeight - height);\n\n        const inner = this.shape.querySelector('.a9s-inner');\n        const updatedPoints = getPoints(inner).map(pt => ({ x: pt.x + dx, y: pt.y + dy }));\n\n        this.grabbedAt = pos;\n\n        this.setPoints(updatedPoints);\n\n        this.emit('update', toSVGTarget(this.shape, this.env.image));\n      }\n      // TODO optional: handles to stretch the shape\n      /* else {\n        const handleIdx = this.handles.indexOf(this.grabbedElem);\n        const oppositeHandle = handleIdx < 2 ? \n          this.handles[handleIdx + 2] : this.handles[handleIdx - 2];\n\n        this.stretchCorners(handleIdx, oppositeHandle, pos);\n\n        this.emit('update', toSVGTarget(this.shape, this.env.image));\n      }*/\n    }\n  }\n\n  onMouseUp = evt => {\n    this.grabbedElem = null;\n    this.grabbedAt = null;\n  }\n\n  get element() {\n    return this.elementGroup;\n  }\n\n  updateState = annotation => {\n    const points = getPoints(svgFragmentToShape(annotation));\n    this.setPoints(points);\n  }\n\n  destroy = () => {\n    this.containerGroup.parentNode.removeChild(this.containerGroup);\n    super.destroy();\n  }\n\n}\n","import Tool from '@recogito/annotorious/src/tools/Tool';\nimport RubberbandFreehand from './RubberbandFreehand';\nimport EditableFreehand from './EditableFreehand';\n\n/**\n * A rubberband selector for freehand fragments.\n */\nexport default class RubberbandFreehandTool extends Tool {\n\n  constructor(g, config, env) {\n    super(g, config, env);\n\n    this._isDrawing = false;\n  }\n\n  startDrawing = (x, y) => {\n    this._isDrawing = true;\n    \n    this.attachListeners({\n      mouseMove: this.onMouseMove,\n      mouseUp: this.onMouseUp,\n      dblClick: this.onDblClick\n    });\n    \n    this.rubberband = new RubberbandFreehand([ x, y ], this.g, this.env);\n  }\n\n  stop = () => {\n    this.detachListeners();\n    \n    this._isDrawing = false;\n\n    if (this.rubberband) {\n      this.rubberband.destroy();\n      this.rubberband = null;\n    }\n  }\n\n  onMouseMove = (x, y) =>\n    this.rubberband.dragTo([ x, y ]);\n\n  onMouseUp = (x, y) => {\n    this.onDblClick(x, y);\n  }\n\n  onDblClick = (x, y) => {\n    this._isDrawing = false;\n\n    this.rubberband.addPoint([ x, y ]);\n\n    this.detachListeners();\n\n    const { width, height } = this.rubberband.getBoundingClientRect();\n\n    const minWidth = this.config.minSelectionWidth || 4;\n    const minHeight = this.config.minSelectionHeight || 4;\n\n    if (width >= minWidth || height >= minHeight) {\n\n      const shape = this.rubberband.element;\n      shape.annotation = this.rubberband.toSelection();\n\n      this.emit('complete', shape);\n    } else {\n      this.emit('cancel');\n    }\n\n    this.stop();\n  }\n\n  get isDrawing() {\n    return this._isDrawing;\n  }\n\n  createEditableShape = annotation =>\n    new EditableFreehand(annotation, this.g, this.config, this.env);\n\n}\n\nRubberbandFreehandTool.identifier = 'freehand';\n\nRubberbandFreehandTool.supports = annotation => {\n  const selector = annotation.selector('SvgSelector');\n  if (selector)\n    return selector.value?.match(/^<svg.*<path/g);\n}","import RubberbandCircleTool from './circle/RubberbandCircleTool';\nimport RubberbandEllipseTool from './ellipse/RubberbandEllipseTool';\nimport RubberbandFreehandTool from './freehand/RubberbandFreehandTool';\n\nconst ALL_TOOLS = new Set([\n  'circle',\n  'ellipse',\n  'freehand'\n]);\n\nconst SelectorPack = (anno, config) => {\n\n  // Add configured tools, or all\n  const useTools = config?.tools ? \n    new Set(config.tools.map(t => t.toLowerCase())) : ALL_TOOLS;\n\n  if (useTools.has('circle'))\n    anno.addDrawingTool(RubberbandCircleTool);\n\n  if (useTools.has('ellipse'))\n    anno.addDrawingTool(RubberbandEllipseTool);\n  \n  if (useTools.has('freehand'))\n    anno.addDrawingTool(RubberbandFreehandTool);\n  \n}\n\nexport default SelectorPack;\n"],"names":["root","factory","exports","module","define","amd","self","equal","a","b","constructor","length","i","keys","Array","isArray","RegExp","source","flags","valueOf","Object","prototype","toString","hasOwnProperty","call","key","E","on","name","callback","ctx","e","this","push","fn","once","listener","off","apply","arguments","_","emit","data","slice","evtArr","len","evts","liveEvents","TinyEmitter","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","definition","o","defineProperty","enumerable","get","obj","prop","getRandomValues","SVG_NAMESPACE","addClass","el","className","classNames","attr","getAttribute","Set","split","getClassNames","add","setAttribute","from","join","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","uuid","REGEX","byteToHex","substr","options","buf","offset","rnds","random","arr","toLowerCase","validate","TypeError","stringify","WebAnnotation","annotation","opts","opt_props","opt_opts","underlying","type","target","selector","find","s","other","id","equals","readOnly","motivation","body","bodies","exact","start","end","args","stub","Selection","cloned","JSON","parse","assign","IMPLEMENTATION_MISSING","isTouch","window","navigator","maxTouchPoints","msMaxTouchPoints","ToolLike","g","config","env","evt","pt","svg","createSVGPoint","bbox","getBoundingClientRect","x","clientX","y","clientY","left","top","matrixTransform","getScreenCTM","inverse","offsetX","offsetY","getCTM","containerGroup","document","createElementNS","group","drawCircle","r","c","radius","handleRadius","inner","outer","appendChild","handle","querySelector","parseFloat","scale","handles","forEach","closest","EventEmitter","Tool","mouseMove","mouseUp","dblClick","getSVGPoint","started","addEventListener","button","removeEventListener","startDrawing","supports","sanitize","doc","cleanEl","attributes","startsWith","removeAttribute","scripts","getElementsByTagName","reverse","parentNode","removeChild","querySelectorAll","svgFragmentToShape","originalDoc","namespaced","parser","DOMParser","value","parseFromString","isPrefixDeclared","lookupPrefix","isDefaultNamespaceSVG","lookupNamespaceURI","firstChild","XMLSerializer","serializeToString","documentElement","replace","drawEmbeddedSVG","shape","cloneNode","toSVGTarget","image","serialized","outerHTML","src","setXYR","setCircleSize","cx","cy","innerCircle","outerCircle","getCircleSize","CircleMask","imageDimensions","circle","tx","w","ty","h","mask","naturalWidth","naturalHeight","RubberbandCircle","anchorX","anchorY","oppositeX","oppositeY","style","display","anchor","Math","max","pow","redraw","Mask","pointerEvents","element","EditableShape","ResizeObserver","resizeObserver","svgBounds","viewBox","baseVal","width","height","scaleHandles","observe","Element","HTMLDocument","enableResponsive","disconnect","isFirefox","test","userAgent","formatSvgEl","svgEl","appendFormatterEl","formatterEl","getBBox","append","format","formatter","String","nodeType","Node","ELEMENT_NODE","setFormatterElSize","EditableCircle","elementGroup","topleft","topright","bottomright","bottomleft","setHandleXY","draggedHandleIdx","anchorHandle","mousePos","getHandleXY","mouseX","mouseY","abs","idx0","idx2","idx3","idx1","grabbedElem","pos","grabbedAt","constrain","coord","setSize","handleIdx","indexOf","oppositeHandle","stretchCorners","onMouseMove","onMouseUp","onGrab","map","t","drawHandle","RubberbandCircleTool","attachListeners","rubberband","destroy","dragTo","detachListeners","minWidth","minSelectionWidth","minHeight","minSelectionHeight","toSelection","stop","identifier","match","rx","ry","setEllipseSize","innerEllipse","outerEllipse","getEllipseSize","EllipseMask","ellipse","RubberbandEllipse","drawEllipse","EditableEllipse","leftHandle","anchorLeft","RubberbandEllipseTool","RubberbandFreehand","points","str","substring","xy","addPoint","setPoints","freehand","getPoints","pointList","point","trim","EditableFreehand","round","num","delta","dx","dy","updatedPoints","RubberbandFreehandTool","_isDrawing","onDblClick","ALL_TOOLS","anno","useTools","tools","has","addDrawingTool"],"sourceRoot":""}